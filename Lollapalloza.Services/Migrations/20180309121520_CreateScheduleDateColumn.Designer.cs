// <auto-generated />
using Lollapalooza.Services.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Lollapalooza.Services.Migrations
{
    [DbContext(typeof(LollapaloozaContext))]
    [Migration("20180309121520_CreateScheduleDateColumn")]
    partial class CreateScheduleDateColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lollapalooza.Services.Model.Show", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Band")
                        .IsRequired();

                    b.Property<string>("Day")
                        .IsRequired();

                    b.Property<string>("EndTime")
                        .IsRequired();

                    b.Property<string>("ImageUrl")
                        .IsRequired();

                    b.Property<string>("Stage")
                        .IsRequired();

                    b.Property<string>("StartTime")
                        .IsRequired();

                    b.HasKey("ShowId");

                    b.ToTable("Show");
                });

            modelBuilder.Entity("Lollapalooza.Services.Model.UserSchedule", b =>
                {
                    b.Property<string>("UserIdentifier");

                    b.Property<int>("ShowId");

                    b.Property<DateTime>("ScheduledDate");

                    b.HasKey("UserIdentifier", "ShowId");

                    b.HasIndex("ShowId");

                    b.HasIndex("UserIdentifier", "ShowId");

                    b.ToTable("UserSchedule");
                });

            modelBuilder.Entity("Lollapalooza.Services.Model.UserSchedule", b =>
                {
                    b.HasOne("Lollapalooza.Services.Model.Show", "Show")
                        .WithMany("UserScheduler")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
